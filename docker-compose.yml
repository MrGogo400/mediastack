version: '3.0'

services:

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent
    container_name: qbittorrent
    networks:
      - monitoring
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - WEBUI_PORT=8080
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8080:8080
    volumes:
      - ./data/torrent/appdata/config:/config
      - ./data/download:/downloads
    restart: unless-stopped

  qbittorrent-exporter:
    image: caseyscarborough/qbittorrent-exporter:latest
    container_name: qbittorrent-exporter
    networks:
      - monitoring
    environment:
      - QBITTORRENT_BASE_URL=http://qbittorrent:8080
    ports:
      - 17871:17871
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - ./data/radarr/data:/config
      - ./data/movies:/movies #optional
      - ./data/download:/downloads #optional
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - ./data/sonarr/data:/config
      - ./data/series:/tv #optional
      - ./data/download:/downloads #optional
    restart: unless-stopped

  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - AUTO_UPDATE=true #optional
    volumes:
      - ./data/jackett/config:/config
      - ./data/jackett/downloads:/downloads
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ./data/plex/config:/config
      - ./data/series:/tv
      - ./data/movies:/movies
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter
    container_name: node-exporter
    pid: host
    networks:
      - monitoring
    command:
      - '--path.rootfs=/host'
    ports:
      - 9100:9100
    volumes:
      - "/:/host:ro,rslave"
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - monitoring
    ports:
      - 9000:9090
    volumes:
      - ./data/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - monitoring
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./data/grafana:/var/lib/grafana
    user: '1000'

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    network_mode: host
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Europe/Paris
    restart: unless-stopped
    
  heimdall:
    image: lscr.io/linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - ./data/heimdall:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

volumes:
  prometheus-data:

networks:
  monitoring:
